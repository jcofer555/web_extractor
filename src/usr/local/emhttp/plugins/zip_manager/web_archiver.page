Menu="Utilities"
Type="xmenu"
Title="Web Archiver"
Icon="zip.png"
Tag="zip.png"
Markdown="false"
---

<?php
$root = '/mnt/';
$archiveResult = '';
$archiveName = $_GET['name'] ?? ($_POST['zip_name'] ?? 'archive');

// Helper to format file sizes
function formatBytes($bytes, $precision = 1) {
    $units = ['B','KB','MB','GB','TB'];
    $bytes = max($bytes, 0);
    $pow = floor(($bytes ? log($bytes) : 0) / log(1024));
    $pow = min($pow, count($units) - 1);
    return round($bytes / pow(1024, $pow), $precision) . ' ' . $units[$pow];
}

function renderBreadcrumb($base, $current, $queryKey, $extra = []) {
    $rel = trim(str_replace($base, '', $current), '/');
    $parts = $rel === '' ? [] : explode('/', $rel);
    $breadcrumbs = [];

    // Root label /mnt (clickable)
    $query = array_merge([$queryKey => ''], $extra);
    $breadcrumbs[] = '<a href="?' . http_build_query($query) . '">/mnt</a>';

    $path = '';
    foreach ($parts as $part) {
        $path .= '/' . $part;
        $query = array_merge([$queryKey => ltrim($path, '/')], $extra);
        $breadcrumbs[] = '<a href="?' . http_build_query($query) . '">' . htmlspecialchars($part) . '</a>';
    }

	return '<div class="current-dir-container"><strong class="current-dir-label">Current Directory:</strong>'
		. '<span class="breadcrumb">' . implode(' <span class="breadcrumb-sep">-></span> ', $breadcrumbs) . '</span></div>';
}

$isSourcePicker = isset($_GET['sourcepicker']);
$isDestPicker = isset($_GET['destpicker']);

$sourcePath = $root;
$sourceRelPath = '';
$destPath = $root;
$destRelPath = '';

if ($isSourcePicker) {
    $browse = $_GET['browse_sources'] ?? '';
    $sourcePath = realpath($root . $browse) ?: $root;
    if (strpos($sourcePath, $root) !== 0 || !is_dir($sourcePath)) $sourcePath = $root;
    $sourceRelPath = trim(str_replace($root, '', $sourcePath), '/');
}

if ($isDestPicker) {
    $browse = $_GET['browse_dest'] ?? '';
    $destPath = realpath($root . $browse) ?: $root;
    if (strpos($destPath, $root) !== 0 || !is_dir($destPath)) $destPath = $root;
    $destRelPath = trim(str_replace($root, '', $destPath), '/');
}

$format = $_SERVER['REQUEST_METHOD'] === 'POST'
    ? ($_POST['zip_format'] ?? 'zip')
    : ($_GET['format'] ?? 'zip');

$zipSources = array_filter(array_map('trim', explode(',', $_GET['sources'] ?? $_POST['zip_sources'] ?? '')));
$zipSources = array_unique(array_map(fn($p) => preg_replace('#/+#', '/', $p), $zipSources));
$zipDestRel = $_GET['dest'] ?? '';
$zipDestFull = $zipDestRel ? preg_replace('#/+#', '/', $root . ltrim($zipDestRel, '/')) : '';

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (isset($_POST['clear'])) {
        echo '<script>window.location.href = "' . strtok($_SERVER["REQUEST_URI"], '?') . '";</script>';
        return;
    }

    if (isset($_POST['create'])) {
        $sources = $zipSources;
        $dest = trim($_POST['zip_output_base'] ?? '');
        $name = preg_replace('/[^a-zA-Z0-9_\-]/', '_', $_POST['zip_name'] ?? 'archive');
        $format = $_POST['zip_format'] ?? 'zip';
        $outputPath = $dest ? rtrim($dest, '/') . '/' . $name . '.' . ($format === 'tar.gz' ? 'tar.gz' : $format) : '';

        if (!$outputPath || empty($sources)) {
            $archiveResult = "<pre>‚ùå Please provide both source paths and a destination folder.</pre><hr>";
        } elseif (file_exists($outputPath) && !isset($_POST['proceed'])) {
            $archiveResult = "<pre>‚ö†Ô∏è Archive already exists:\n\n$outputPath\n\nPlease confirm to overwrite.</pre>";
            $archiveResult .= '<form method="post">';
            $archiveResult .= '<input type="hidden" name="zip_sources" value="' . htmlspecialchars(implode(',', $sources)) . '">';
            $archiveResult .= '<input type="hidden" name="zip_output_base" value="' . htmlspecialchars($dest) . '">';
            $archiveResult .= '<input type="hidden" name="zip_name" value="' . htmlspecialchars($name) . '">';
            $archiveResult .= '<input type="hidden" name="zip_format" value="' . htmlspecialchars($format) . '">';
            $archiveResult .= '<input type="hidden" name="proceed" value="1">';
            $archiveResult .= '<input type="submit" name="create" value="‚úÖ Overwrite">';
            $archiveResult .= '</form><hr>';
        } else {
            $escapedSources = array_map('escapeshellarg', $sources);

            if ($format === 'tar.gz') {
                $tempTar = '/tmp/archive_temp.tar';
                $cmd1 = "/usr/bin/7zzs a -ttar $tempTar " . implode(' ', $escapedSources);
                $cmd2 = "/usr/bin/7zzs a -tgzip " . escapeshellarg($outputPath) . " " . escapeshellarg($tempTar);
                exec($cmd1, $out1, $code1);
                exec($cmd2, $out2, $code2);
                unlink($tempTar);
                $zipOutput = array_merge($out1, $out2);
                $zipCode = max($code1, $code2);
            } else {
                $cmd = "/usr/bin/7zzs a -t$format " . escapeshellarg($outputPath) . " " . implode(' ', $escapedSources);
                exec($cmd, $zipOutput, $zipCode);
            }

            if ($zipCode <= 1 && file_exists($outputPath)) {
                exec("chown nobody:users " . escapeshellarg($outputPath));
                exec("chmod 644 " . escapeshellarg($outputPath));
            }

            $archiveResult .= "<pre>";
            if ($zipCode <= 1) {
                $archiveResult .= "‚úÖ Archive created at: $outputPath\n";
            } else {
                $archiveResult .= "‚ùå Archive creation failed (code $zipCode)\n";
            }
            $archiveResult .= htmlspecialchars(implode("\n", $zipOutput));
            $archiveResult .= "</pre><hr>";
        }
    }
}
?>
<style>
  body { font-family: sans-serif; margin: 2em; }
  .form-row {
    display: flex;
    align-items: flex-start;
    margin-top: 1em;
  }
  .form-row label {
    width: 180px;
    font-weight: bold;
    padding-top: 6px;
  }
  .form-row input[type="text"],
  .form-row select {
    flex: 1;
    padding: 6px;
    cursor: pointer;
  }
  .folder-list {
    margin-top: 1em;
    padding-left: 1em;
    border-left: 2px solid #ccc;
    max-height: 300px;
    overflow-y: auto;
    background: #fff;
  }
  .folder-list a {
    text-decoration: none;
    color: orange;
    background: white;
    padding: 4px 8px;
    border-radius: 4px;
    display: block;
    margin: 4px 0;
  }
  .folder-list a:hover {
    background: #ffe5cc;
  }
  .file-entry {
    color: green;
  }
  .folder-list input[type="checkbox"] {
    width: 16px;
    height: 16px;
    accent-color: orange;
  }
.current-dir-container {
  margin-bottom: 0.5em;
  font-size: 1em;
  color: #444;
}
.current-dir-container strong {
  margin-right: 0.5em;
}
.breadcrumb {
  color: #333;
  white-space: nowrap;
}
.breadcrumb a {
  color: orange;
  text-decoration: none;
  display: inline;
}
.breadcrumb a:hover {
  color: red;
  text-decoration: underline;
}
.current-dir-label {
  color: orange;
  margin-right: 0.5em;
}

.breadcrumb-sep {
  color: orange;
}
</style>

<?php
// Dynamically generate the Archiver page URL with CSRF token
$csrfToken = $_GET['csrf_token'] ?? ''; // Or retrieve from session if needed
$archiverUrl = "/Settings/web_extractor" . ($csrfToken ? "?csrf_token=" . urlencode($csrfToken) : '');
?>

<div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 0.1em;">
  <h2 style="margin: 0;">Create archive using 7-zip</h2>

  <!-- Button container -->
  <div style="display: flex; gap: 0.5em; margin-left: 1em;">
    <!-- First button: Go to Extractor -->
    <form action="<?= htmlspecialchars($archiverUrl) ?>" method="get" style="margin: 0;">
      <input type="submit" value="üîó Extractor Page" style="margin-top: 0.1em;">
    </form>

    <!-- Second button: Support Forum -->
    <form action="https://forums.unraid.net/topic/191678-7-zip-for-unraid/" method="get" target="_blank" style="margin: 0;">
      <input type="submit" value="‚ùì Support Forum" style="margin-top: 0.1em;">
    </form>
  </div>
</div>

<div id="processing-message" style="display: none; color: orange; font-weight: bold; margin-top: 1em;">
  ‚è≥ Processing, please wait...
</div>

<form method="post">
  <div class="form-row">
    <label>Files to include:</label>
    <div style="position: relative; display: inline-block;">
      <input type="text" name="zip_sources_display" readonly
             value="<?= htmlspecialchars(implode(', ', $zipSources)) ?>"
             onclick="window.location='?sourcepicker=1&browse_sources=<?= urlencode($sourceRelPath) ?>&sources=<?= urlencode(implode(',', $zipSources)) ?>&dest=<?= urlencode($zipDestRel) ?>&name=<?= urlencode($archiveName) ?>&format=<?= urlencode($format) ?>'"
             style="width: 300px; padding-right: 1em;">
      <?php if (empty($zipSources)): ?>
        <span style="
          position: absolute;
          left: 8px;
          top: 50%;
          transform: translateY(-50%);
          color: #aaa;
          pointer-events: none;
          font-style: italic;
        ">Click to browse</span>
      <?php endif; ?>
    </div>
  </div>

  <div class="form-row">
    <label>Destination folder:</label>
    <div style="position: relative; display: inline-block;">
      <input type="text" name="zip_output_base_display" readonly
             value="<?= htmlspecialchars($zipDestFull) ?>"
             onclick="window.location='?destpicker=1&browse_dest=<?= urlencode($destRelPath) ?>&sources=<?= urlencode(implode(',', $zipSources)) ?>&dest=<?= urlencode($zipDestRel) ?>&name=<?= urlencode($archiveName) ?>&format=<?= urlencode($format) ?>'"
             style="width: 300px; padding-right: 1em;">
      <?php if (empty($zipDestFull)): ?>
        <span style="
          position: absolute;
          left: 8px;
          top: 50%;
          transform: translateY(-50%);
          color: #aaa;
          pointer-events: none;
          font-style: italic;
        ">Click to browse</span>
      <?php endif; ?>
    </div>
  </div>

  <div class="form-row">
    <label>Archive name:</label>
    <div style="position: relative; display: inline-block;">
      <input type="text" name="zip_name" id="zip_name"
             value="<?= htmlspecialchars($archiveName) ?>"
             style="width: 300px; padding-right: 1em;"
             oninput="togglePlaceholder(this)">
      <span id="zip_name_placeholder" style="
        position: absolute;
        left: 8px;
        top: 50%;
        transform: translateY(-50%);
        color: #aaa;
        pointer-events: none;
        font-style: italic;
        <?= empty($archiveName) ? '' : 'display: none;' ?>
      ">Set a name</span>
    </div>
  </div>

  <script>
  function togglePlaceholder(input) {
    const placeholder = document.getElementById('zip_name_placeholder');
    placeholder.style.display = input.value.trim() ? 'none' : 'inline';
  }
  </script>

  <div class="form-row" style="align-items: center;">
    <label>Archive format:</label>
    <select name="zip_format" style="
      width: 75px !important;
      min-width: 0 !important;
      max-width: 75px !important;
      padding: 6px;
      font-size: 13px;
      box-sizing: border-box;
      display: inline-block;
      appearance: none;
      -webkit-appearance: none;
      -moz-appearance: none;
    ">
      <option value="zip" <?= $format === 'zip' ? 'selected' : '' ?>>ZIP</option>
      <option value="7z" <?= $format === '7z' ? 'selected' : '' ?>>7Z</option>
      <option value="tar" <?= $format === 'tar' ? 'selected' : '' ?>>TAR</option>
      <option value="tar.gz" <?= $format === 'tar.gz' ? 'selected' : '' ?>>TAR.GZ</option>
    </select>
  </div>

  <input type="hidden" name="zip_sources" value="<?= htmlspecialchars(implode(',', $zipSources)) ?>">
  <input type="hidden" name="zip_output_base" value="<?= htmlspecialchars($zipDestFull) ?>">

  <?php $disableCreate = empty($zipSources) || empty($zipDestFull) || empty($archiveName); ?>

  <div style="margin-top: 1.5em;">
    <input type="submit" name="create" value="üì¶ Create Archive"
      <?= $disableCreate ? 'disabled style="opacity:0.5; cursor:not-allowed;" title="Please select files and a destination."' : '' ?>>
    <input type="submit" name="clear" value="üßº Clear">
  </div>
</form>

<?php if ($isSourcePicker): ?>
<div id="file-picker-container">
<?php
$excludedFolders = ['user0', 'rootshare', 'addons'];
$entries = array_filter(scandir($sourcePath), fn($e) => $e !== '.' && $e !== '..' && !in_array($e, $excludedFolders));
usort($entries, function ($a, $b) use ($sourcePath) {
    $aIsDir = is_dir("$sourcePath/$a");
    $bIsDir = is_dir("$sourcePath/$b");
    if ($aIsDir === $bIsDir) return strnatcasecmp($a, $b);
    return $aIsDir ? -1 : 1;
});
?>
<?= renderBreadcrumb($root, $sourceRelPath, 'sourcepicker', [
    'sources' => implode(',', $zipSources),
    'dest' => $zipDestRel,
    'name' => $archiveName,
    'format' => $format
]) ?>
<div class="folder-list">
<?php
  if ($sourcePath !== $root) {
      $parent = dirname($sourcePath);
      echo '<a href="?sourcepicker=1&browse_sources=' . urlencode(trim(str_replace($root, '', $parent), '/')) .
           '&file=' . urlencode($selectedFile) .
           '&dest=' . urlencode($selectedDestRel) . '">‚¨ÜÔ∏è Up</a>';
  }
foreach ($entries as $entry) {
    $path = $sourcePath . '/' . $entry;
    $real = realpath($path);
    if (!$real || $real === rtrim($root, '/')) continue;
    $normalized = preg_replace('#/+#', '/', $real);
    $isSelected = in_array($normalized, $zipSources);

    $newSources = $isSelected
        ? array_filter($zipSources, fn($s) => $s !== $normalized)
        : array_merge($zipSources, [$normalized]);

    $newSources = array_unique(array_map(fn($p) => preg_replace('#/+#', '/', trim($p)), $newSources));

    $toggleUrl = '?sourcepicker=1&browse_sources=' . urlencode($sourceRelPath) .
                 '&sources=' . urlencode(implode(',', $newSources)) .
                 '&dest=' . urlencode($zipDestRel) .
                 '&name=' . urlencode($archiveName) .
                 '&format=' . urlencode($format);

    echo '<div style="display:flex; align-items:center; gap:0.5em;">';
    echo '<label style="cursor:pointer; display:flex; align-items:center; gap:0.5em;">';
    echo '<input type="checkbox" ' . ($isSelected ? 'checked' : '') . ' onclick="event.stopPropagation(); window.location=\'' . $toggleUrl . '\';">';
    echo '</label>';

    if (is_dir($path)) {
        $browseRel = trim(str_replace($root, '', $path), '/');
        $browseUrl = '?sourcepicker=1&browse_sources=' . urlencode($browseRel) .
                     '&sources=' . urlencode(implode(',', $zipSources)) .
                     '&dest=' . urlencode($zipDestRel) .
                     '&name=' . urlencode($archiveName) .
                     '&format=' . urlencode($format);
        echo '<a href="' . $browseUrl . '">üìÇ ' . htmlspecialchars($entry) . '</a>';
    } else {
        $size = formatBytes(filesize($path));
        echo '<span class="file-entry">üìÑ ' . htmlspecialchars($entry) . " ($size)</span>";
    }

    echo '</div>';
}
?>
</div>
</div>
<?php endif; ?>

<?php if ($isDestPicker): ?>
<div id="dest-picker-container">
<?php
$excludedFolders = ['user0', 'rootshare', 'addons'];
$entries = array_filter(scandir($destPath), fn($e) =>
    $e !== '.' && $e !== '..' && !in_array($e, $excludedFolders) && is_dir("$destPath/$e")
);
usort($entries, fn($a, $b) => strnatcasecmp($a, $b));
?>
<?= renderBreadcrumb($root, $destRelPath, 'destpicker', [
    'sources' => implode(',', $zipSources),
    'dest' => $zipDestRel,
    'name' => $archiveName,
    'format' => $format
]) ?>
<div class="folder-list">
<?php
  if ($destPath !== $root) {
      $parent = dirname($destPath);
      echo '<a href="?destpicker=1&browse_dest=' . urlencode(trim(str_replace($root, '', $parent), '/')) .
           '&file=' . urlencode($selectedFile) .
           '&dest=' . urlencode($selectedDestRel) . '">‚¨ÜÔ∏è Up</a>';
  }
foreach ($entries as $entry) {
    $path = $destPath . '/' . $entry;
    $real = realpath($path);
    if (!$real || $real === rtrim($root, '/')) continue;
    $normalized = preg_replace('#/+#', '/', $real);
    $isSelected = ($zipDestFull === $normalized);

    $toggleUrl = '?destpicker=1&browse_dest=' . urlencode($destRelPath) .
                 '&sources=' . urlencode(implode(',', $zipSources)) .
                 '&dest=' . urlencode($isSelected ? '' : trim(str_replace($root, '', $normalized), '/')) .
                 '&name=' . urlencode($archiveName) .
                 '&format=' . urlencode($format);

    $browseRel = trim(str_replace($root, '', $path), '/');
    $browseUrl = '?destpicker=1&browse_dest=' . urlencode($browseRel) .
                 '&sources=' . urlencode(implode(',', $zipSources)) .
                 '&dest=' . urlencode($zipDestRel) .
                 '&name=' . urlencode($archiveName) .
                 '&format=' . urlencode($format);

    echo '<div style="display:flex; align-items:center; gap:0.5em;">';
    echo '<label style="cursor:pointer; display:flex; align-items:center; gap:0.5em;">';
    echo '<input type="checkbox" ' . ($isSelected ? 'checked' : '') .
         ' onclick="event.stopPropagation(); window.location=\'' . $toggleUrl . '\';">';
    echo '</label>';
    echo '<a href="' . $browseUrl . '">üìÇ ' . htmlspecialchars($entry) . '</a>';
    echo '</div>';
}
?>
</div>
</div>
<?php endif; ?>

<?= $archiveResult ?>

<script>
document.addEventListener('click', function(event) {
  const filePicker = document.getElementById('file-picker-container');
  const destPicker = document.getElementById('dest-picker-container');

  // Helper to check if click was inside a container or input
  function clickInside(element) {
    return element && (element.contains(event.target) || event.target === element);
  }

  // For file picker
  if (filePicker) {
    const inputFile = document.querySelector('input[name="selected_file_display"]');
    if (!clickInside(filePicker) && event.target !== inputFile) {
      // Hide picker container
      filePicker.style.display = 'none';

      // Remove ?filepicker=1 from URL without reloading
      const url = new URL(window.location);
      url.searchParams.delete('filepicker');
      url.searchParams.delete('browse_file');
      // Optionally keep file & dest params if you want
      history.replaceState(null, '', url.toString());
    }
  }

  // For destination picker
  if (destPicker) {
    const inputDest = document.querySelector('input[name="destination_display"]');
    if (!clickInside(destPicker) && event.target !== inputDest) {
      // Hide picker container
      destPicker.style.display = 'none';

      // Remove ?destpicker=1 from URL without reloading
      const url = new URL(window.location);
      url.searchParams.delete('destpicker');
      url.searchParams.delete('browse_dest');
      history.replaceState(null, '', url.toString());
    }
  }
});
// Show "processing" message when form is submitted
document.querySelector('form[method="post"]').addEventListener('submit', function() {
  const msg = document.getElementById('processing-message');
  if (msg) msg.style.display = 'block';
});
</script>